"""adsds

Revision ID: e000f1660073
Revises: 
Create Date: 2024-11-19 23:06:12.682089

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e000f1660073'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('main_server',
    sa.Column('server_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('server_ip', sa.String(), nullable=True),
    sa.Column('server_protocol', sa.String(), nullable=True),
    sa.Column('server_port', sa.Integer(), nullable=True),
    sa.Column('server_username', sa.String(), nullable=True),
    sa.Column('server_password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('server_id')
    )
    op.create_table('user_detail',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone_number', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('register_date', sa.DateTime(), nullable=True),
    sa.Column('credit', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('cart',
    sa.Column('cart_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user_detail.user_id'], ),
    sa.PrimaryKeyConstraint('cart_id')
    )
    op.create_table('financial_report',
    sa.Column('financial_id', sa.Integer(), nullable=False),
    sa.Column('operation', sa.String(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('id_holder', sa.Integer(), nullable=True),
    sa.Column('payment_getway', sa.String(), nullable=True),
    sa.Column('authority', sa.String(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('url_callback', sa.String(), nullable=True),
    sa.Column('additional_data', sa.String(), nullable=True),
    sa.Column('payment_status', sa.String(), nullable=True),
    sa.Column('register_date', sa.DateTime(), nullable=True),
    sa.Column('owner_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user_detail.user_id'], ),
    sa.PrimaryKeyConstraint('financial_id')
    )
    op.create_table('product',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('product_name', sa.String(), nullable=True),
    sa.Column('register_date', sa.DateTime(), nullable=True),
    sa.Column('main_server_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['main_server_id'], ['main_server.server_id'], ),
    sa.PrimaryKeyConstraint('product_id')
    )
    op.create_table('purchase',
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('plan_name', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('traffic', sa.Integer(), nullable=True),
    sa.Column('period', sa.Integer(), nullable=True),
    sa.Column('service_uuid', sa.String(), nullable=True),
    sa.Column('subscription_url', sa.String(), nullable=True),
    sa.Column('update', sa.Boolean(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.BigInteger(), nullable=True),
    sa.Column('register_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user_detail.user_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.product_id'], ),
    sa.PrimaryKeyConstraint('purchase_id')
    )
    op.create_table('cart_purchase_association',
    sa.Column('cart_id', sa.Integer(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cart_id'], ['cart.cart_id'], ),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchase.purchase_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('cart_id', 'purchase_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cart_purchase_association')
    op.drop_table('purchase')
    op.drop_table('product')
    op.drop_table('financial_report')
    op.drop_table('cart')
    op.drop_table('user_detail')
    op.drop_table('main_server')
    # ### end Alembic commands ###
